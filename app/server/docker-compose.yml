version: '3.8'

services:
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  influxdb:
    image: influxdb:2.7-alpine
    restart: unless-stopped
    ports:
      - "8086:8086"
    environment:
      # InfluxDB setup with sensible defaults
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUXDB_USERNAME:-admin}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_PASSWORD:-password123}
      - DOCKER_INFLUXDB_INIT_ORG=${INFLUXDB_ORG:-system-monitor}
      - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUXDB_BUCKET:-telemetry}
      - DOCKER_INFLUXDB_INIT_RETENTION=${INFLUXDB_RETENTION:-30d}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUXDB_TOKEN:-dev-token-change-in-production}
    volumes:
      - influxdb_data:/var/lib/influxdb2
      - influxdb_config:/etc/influxdb2
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  web:
    build: .
    restart: unless-stopped
    ports:
      - "${SERVER_PORT:-8001}:8000"
    environment:
      # Django configuration
      - DEBUG=${DEBUG:-False}
      - SECRET_KEY=${SECRET_KEY:-django-insecure-change-in-production}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-localhost,127.0.0.1,0.0.0.0}
      
      # Database (using SQLite by default, can override)
      - DATABASE_URL=${DATABASE_URL:-sqlite:///db.sqlite3}
      
      # Redis configuration
      - REDIS_URL=${REDIS_URL:-redis://redis:6379/0}
      
      # InfluxDB configuration  
      - INFLUXDB_URL=${INFLUXDB_URL:-http://influxdb:8086}
      - INFLUXDB_TOKEN=${INFLUXDB_TOKEN:-dev-token-change-in-production}
      - INFLUXDB_ORG=${INFLUXDB_ORG:-system-monitor}
      - INFLUXDB_BUCKET=${INFLUXDB_BUCKET:-telemetry}
      
      # Agent configuration - uses Docker networking by default
      - AGENT_HOST=${AGENT_HOST:-host.docker.internal}
      - AGENT_PORT=${AGENT_PORT:-8000}
      
      # Celery configuration
      - CELERY_BROKER_URL=${CELERY_BROKER_URL:-redis://redis:6379/0}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND:-redis://redis:6379/0}
    
    depends_on:
      redis:
        condition: service_healthy
      influxdb:
        condition: service_healthy
    
    volumes:
      - ./logs:/app/logs
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  redis_data:
  influxdb_data:
  influxdb_config: