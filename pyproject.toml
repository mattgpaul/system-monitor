[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "system-monitor"
description = "Distributed system telemetry monitoring with agent-based data collection"
readme = "README.md"
license = {text = "MIT"}
authoers = [
    {name = "Matthew Paul", email = "mattgpaul@gmail.com"},
]
requires-python = ">=3.12"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: System :: Monitoring",
]
dependencies = [
    # Core dependencies will be added later
]
dynamic = ["version"]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "pytest-asyncio>=0.21",
    "pytest-mock>=3.10.0",
    "black>=23.0",
    "isort>=5.12.0",
    "flake8>=6.0",
    "mypy>=1.0",
    "httpx>=0.25.0",
]
agent = [
    # Agent-specific dependencies
    "fastapi>=0.104.0",
    "uvicorn>=0.24.0",
    "pydantic>=2.0",
    "psutil>=5.9",
    "aiohttp>=3.8",
    "strawberry-graphql[fastapi]>=0.216.0",
]
container = [
    # Container-specific dependencies
    "django>=4.2",
    "redis>=5.0",
    "influxdb-client>=1.38",
    "celery>=5.3",
]

[project.urls]
Homepage = "https://github.com/yourusername/system-monitor"
Repository = "https://github.com/yourusername/system-monitor"
Issues = "https://github.com/yourusername/system-monitor/issues"

[tool.hatch.version]
path = "app/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["app"]

# Testing configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "-ra",
    "--cov=app",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "-m", "not integration",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# Code formatting with Black
[tool.black]
line-length = 100
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# Import sorting with isort
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["app"]

# Type checking with mypy
[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
disable_error_code = ["no-any-return", "assignment", "index"]

[[tool.mypy.overrides]]
module = [
    "psutil.*",
    "aiohttp.*",
]
ignore_missing_imports = true

# Coverage configuration
[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "@abstract",
]

[tool.flake8]
    max-line-length = 100
    extend-ignore = ["E203", "W503"]